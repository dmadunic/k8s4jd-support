kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-rest-deployment
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Release.Name }}-rest
  annotations:
    configmap.reloader.stakater.com/reload: "{{ .Release.Name }}-config"
    secret.reloader.stakater.com/reload: "{{ .Release.Name }}-secret"
spec:
  replicas: {{ .Values.replicaCount.api }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      deploy: {{ .Release.Name }}-rest
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-rest
        deploy: {{ .Release.Name }}-rest
    spec:
      containers:
        - name: {{ .Release.Name }}-rest
          image: {{ .Values.image.geodataRest }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: _JAVA_OPTIONS
            value: "-Xmx768m -Xms384m"
          - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
            value: "true"
          - name: JHIPSTER_SLEEP
            value: "1"
          - name: SPRING_PROFILES_ACTIVE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "spring_profiles_active"
          - name: LIQUIBASE_SECURE_PARSING
            value: "false"
          - name: DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "datasource_url"
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "geodata_db_user"
          - name: DB_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: "geodata_db_pwd"
          - name: DB_SCHEMA
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "db_schema"
          - name: GR_LIQUIBASE_ENABLED
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "gr_liquibase_enabled"
          - name: LIQUIBASE_CONTEXTS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "liquibase_contexts"
          - name: APP_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "app_base_url"
          - name: APP_MAIL_FROM
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "app_mail_from"
          - name: MAIL_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "mail_host"
          - name: MAIL_USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "mail_user"
          - name: MAIL_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "mail_port"
          - name: MAIL_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: "geodata_mail_pwd"
          - name: MAX_POOL_SIZE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "max_pool_size"
          {{ if .Values.geodata.infinispan.enabled }}
          - name: INFINISPAN-SERVER-LIST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "infinispan_server_list"
          - name: INFINISPAN-USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: "infinispan_user"
          - name: INFINISPAN-PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: "infinispan_pwd"
          {{ end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: '384Mi'
              cpu: '400m'
            limits:
              memory: '768Mi'
              cpu: '1'
          readinessProbe:
            httpGet:
              path: /management/health
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /management/health
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
